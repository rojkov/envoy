syntax = "proto3";

package envoy.config.filter.http.brotli.v2;

option java_outer_classname = "BrotliProto";
option java_multiple_files = true;
option java_package = "io.envoyproxy.envoy.config.filter.http.brotli.v2";
option go_package = "v2";

import "google/protobuf/wrappers.proto";

import "validate/validate.proto";
import "gogoproto/gogo.proto";
import "envoy/config/filter/http/compressor/v2/compressor.proto";

// [#protodoc-title: Brotli]
// Brotli :ref:`configuration overview <config_http_filters_brotli>`.

message Brotli {
  // Value from 1 to 12 that controls the main compression speed-density lever.
  // The higher quality, the slower compression. The default value is 12.
  google.protobuf.UInt32Value quality = 1 [(validate.rules).uint32 = {gte: 1, lte: 12}];

  enum EncoderMode {
    DEFAULT = 0;
    GENERIC = 1;
    TEXT = 2;
    FONT = 3;
  }

  // A value used to tune encoder for specific input. For more information about modes,
  // please refer to brotli manual. This field will be set to "DEFAULT" if not specified.
  EncoderMode encoder_mode = 2 [(validate.rules).enum.defined_only = true];

  // Value from 10 to 24 that represents the base two logarithmic of the compressor's window size.
  // Larger window results in better compression at the expense of memory usage. The default is 24
  // which will produce a 4080 bytes window. For more details about this parameter, please refer to
  // brotli manual.
  google.protobuf.UInt32Value window_bits = 3 [(validate.rules).uint32 = {gte: 10, lte: 24}];

  // Value from 16 to 24 that represents the base two logarithmic of the compressor's input block
  // size. Larger input block results in better compression at the expense of memory usage. The
  // default is 24. For more details about this parameter, please refer to brotli manual.
  google.protobuf.UInt32Value input_block_bits = 4 [(validate.rules).uint32 = {gte: 16, lte: 24}];

  // If true, disables "literal context modeling" format feature.
  // This flag is a "decoding-speed vs compression ratio" trade-off.
  bool disable_literal_context_modeling = 5;

  // Set of configuration parameters common for all compression filters. If this field is set then
  // the fields `content_length`, `content_type`, `disable_on_etag_header` and
  // `remove_accept_encoding_header` are ignored.
  envoy.config.filter.http.compressor.v2.Compressor compressor = 6;
}
