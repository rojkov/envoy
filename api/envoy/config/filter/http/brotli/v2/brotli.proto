syntax = "proto3";

package envoy.config.filter.http.brotli.v2;

option java_outer_classname = "BrotliProto";
option java_multiple_files = true;
option java_package = "io.envoyproxy.envoy.config.filter.http.brotli.v2";
option go_package = "v2";

import "google/protobuf/wrappers.proto";

import "validate/validate.proto";
import "gogoproto/gogo.proto";

// [#protodoc-title: Brotli]
// Brotli :ref:`configuration overview <config_http_filters_brotli>`.

message Brotli {
  // Value from 1 to 12 that controls the main compression speed-density lever.
  // The higher quality, the slower compression. The default value is 12.
  google.protobuf.UInt32Value quality = 1 [(validate.rules).uint32 = {gte: 1, lte: 12}];

  // Minimum response length, in bytes, which will trigger compression. The default value is 30.
  google.protobuf.UInt32Value content_length = 2 [(validate.rules).uint32.gte = 30];

  enum EncoderMode {
    DEFAULT = 0;
    GENERIC = 1;
    TEXT = 2;
    FONT = 3;
  }

  // A value used to tune encoder for specific input. For more information about modes,
  // please refer to brotli manual. This field will be set to "DEFAULT" if not specified.
  EncoderMode encoder_mode = 4 [(validate.rules).enum.defined_only = true];

  // Set of strings that allows specifying which mime-types yield compression; e.g.,
  // application/json, text/html, etc. When this field is not defined, compression will be applied
  // to the following mime-types: "application/javascript", "application/json",
  // "application/xhtml+xml", "image/svg+xml", "text/css", "text/html", "text/plain", "text/xml".
  repeated string content_type = 6 [(validate.rules).repeated = {max_items: 50}];

  // If true, disables compression when the response contains an etag header. When it is false, the
  // filter will preserve weak etags and remove the ones that require strong validation.
  bool disable_on_etag_header = 7;

  // If true, removes accept-encoding from the request headers before dispatching it to the upstream
  // so that responses do not get compressed before reaching the filter.
  bool remove_accept_encoding_header = 8;

  // Value from 9 to 15 that represents the base two logarithmic of the compressor's window size.
  // Larger window results in better compression at the expense of memory usage. The default is 12
  // which will produce a 4096 bytes window. For more details about this parameter, please refer to
  // zlib manual > deflateInit2.
  google.protobuf.UInt32Value window_bits = 9 [(validate.rules).uint32 = {gte: 9, lte: 15}];
}
