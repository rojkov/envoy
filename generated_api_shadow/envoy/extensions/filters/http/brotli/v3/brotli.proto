syntax = "proto3";

package envoy.extensions.filters.http.brotli.v3;

import "google/protobuf/wrappers.proto";

import "udpa/annotations/versioning.proto";

import "validate/validate.proto";

option java_package = "io.envoyproxy.envoy.extensions.filters.http.brotli.v3";
option java_outer_classname = "BrotliProto";
option java_multiple_files = true;

// [#protodoc-title: Brotli]
// Brotli :ref:`configuration overview <config_http_filters_brotli>`.

// [#next-free-field: 10]
message Brotli {
  option (udpa.annotations.versioning).previous_message_type =
      "envoy.config.filter.http.brotli.v2.Brotli";

  enum EncoderMode {
    DEFAULT = 0;
    GENERIC = 1;
    TEXT = 2;
    FONT = 3;
  }

  // Value from 1 to 12 that controls the main compression speed-density lever.
  // The higher quality, the slower compression. The default value is 12.
  google.protobuf.UInt32Value quality = 1 [(validate.rules).uint32 = {lte: 12 gte: 1}];

  // Minimum response length, in bytes, which will trigger compression. The default value is 30.
  google.protobuf.UInt32Value content_length = 2 [(validate.rules).uint32 = {gte: 30}];

  // A value used to tune encoder for specific input. For more information about modes,
  // please refer to brotli manual. This field will be set to "DEFAULT" if not specified.
  EncoderMode encoder_mode = 3 [(validate.rules).enum = {defined_only: true}];

  // Set of strings that allows specifying which mime-types yield compression; e.g.,
  // application/json, text/html, etc. When this field is not defined, compression will be applied
  // to the following mime-types: "application/javascript", "application/json",
  // "application/xhtml+xml", "image/svg+xml", "text/css", "text/html", "text/plain", "text/xml".
  repeated string content_type = 4 [(validate.rules).repeated = {max_items: 50}];

  // If true, disables compression when the response contains an etag header. When it is false, the
  // filter will preserve weak etags and remove the ones that require strong validation.
  bool disable_on_etag_header = 5;

  // If true, removes accept-encoding from the request headers before dispatching it to the upstream
  // so that responses do not get compressed before reaching the filter.
  bool remove_accept_encoding_header = 6;

  // Value from 10 to 24 that represents the base two logarithmic of the compressor's window size.
  // Larger window results in better compression at the expense of memory usage. The default is 24
  // which will produce a 4080 bytes window. For more details about this parameter, please refer to
  // brotli manual.
  google.protobuf.UInt32Value window_bits = 7 [(validate.rules).uint32 = {lte: 24 gte: 10}];

  // Value from 16 to 24 that represents the base two logarithmic of the compressor's input block
  // size. Larger input block results in better compression at the expense of memory usage. The
  // default is 24. For more details about this parameter, please refer to brotli manual.
  google.protobuf.UInt32Value input_block_bits = 8 [(validate.rules).uint32 = {lte: 24 gte: 16}];

  // If true, disables "literal context modeling" format feature.
  // This flag is a "decoding-speed vs compression ratio" trade-off.
  bool disable_literal_context_modeling = 9;
}
