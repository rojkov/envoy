syntax = "proto3";

package test.extensions.filters.http.common.compressor;

import "google/protobuf/wrappers.proto";

import "validate/validate.proto";

message Mock {

  // Minimum response length, in bytes, which will trigger compression. The default value is 30.
  google.protobuf.UInt32Value content_length = 2 [(validate.rules).uint32.gte = 30];

  // Set of strings that allows specifying which mime-types yield compression; e.g.,
  // application/json, text/html, etc. When this field is not defined, compression will be applied
  // to the following mime-types: "application/javascript", "application/json",
  // "application/xhtml+xml", "image/svg+xml", "text/css", "text/html", "text/plain", "text/xml".
  repeated string content_type = 6 [(validate.rules).repeated = {max_items: 50}];

  // If true, disables compression when the response contains an etag header. When it is false, the
  // filter will preserve weak etags and remove the ones that require strong validation.
  bool disable_on_etag_header = 7;

  // If true, removes accept-encoding from the request headers before dispatching it to the upstream
  // so that responses do not get compressed before reaching the filter.
  bool remove_accept_encoding_header = 8;
}
